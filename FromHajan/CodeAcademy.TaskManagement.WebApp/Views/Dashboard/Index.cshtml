@model IQueryable<CodeAcademy.TaskManagement.Domain.Entities.DashboardWidget>


@{
    ViewBag.Title = "Dashboard";
}

@section styles {
    <style>
        .widget-small {
            width: 280px;
            height: 200px;
            background-color: darkred;
            border: 1px solid black;
            color: white;
        }

        .widget-medium {
            width: 400px;
            height: 200px;
            background-color: yellow;
            border: 1px solid black;
            color: white;
        }

        .widget-big {
            width: 800px;
            height: 200px;
            background-color: darkcyan;
            border: 1px solid black;
            color: white;
        }
    </style>    
}

<h2>Dashboard</h2>


@foreach (var item in Model)
{
    <div class="@GetWidgetSize(item.Size)">
        <h2>@item.DisplayName</h2>
        <content id="dashboardWidgets">
            @if (item.Size == CodeAcademy.TaskManagement.Domain.Entities.WidgetSize.Small)
            {
                <a href="#" itemid="@item.ID" userid="@item.UserId" size="2" class="btnBig btn btn-default">BIG</a>
                <a href="#" itemid="@item.ID" userid="@item.UserId" size="1" class="btnMedium btn btn-default">MEDIUM</a>
            }
            else if (item.Size == CodeAcademy.TaskManagement.Domain.Entities.WidgetSize.Medium)
            {
                <a href="#" itemid="@item.ID" userid="@item.UserId" size="0" class="btn btn-default">SMALL</a>
                <a href="#" itemid="@item.ID" userid="@item.UserId" size="2" class="btnBig btnMedium btn btn-default">BIG</a>
            }
            else if (item.Size == CodeAcademy.TaskManagement.Domain.Entities.WidgetSize.Big)
            {
                <a href="#" itemid="@item.ID" userid="@item.UserId" size="0" class="btn btn-default">SMALL</a>
                <a href="#" itemid="@item.ID" userid="@item.UserId" size="1" class="btnMedium btn btn-default">MEDIUM</a>
            }
        </content>
    </div>
}

@functions {
    public string GetWidgetSize(CodeAcademy.TaskManagement.Domain.Entities.WidgetSize widgetSize)
    {
        switch (widgetSize)
        {
            case CodeAcademy.TaskManagement.Domain.Entities.WidgetSize.Small:
                return "widget-small";

            case CodeAcademy.TaskManagement.Domain.Entities.WidgetSize.Medium:
                return "widget-medium";

            case CodeAcademy.TaskManagement.Domain.Entities.WidgetSize.Big:
                return "widget-big";

            default:
                return "";
        }
    }
}

@section scripts{
        <script>
            $(function myfunction() {
                $("#dashboardWidgets a").on("click", function (event) {
                    event.preventDefault();
                    var itemId = $(this).attr("itemid");
                    var userId = $(this).attr("userid");
                    var size = $(this).attr("size");

                    var $currentObject = $(this);

                    $.get("/dashboard/setSize?userID=" + userId + "&itemid=" + itemId + "&size=" + size, function (response) {
                        
                        if (response) {
                            $currentObject.closest('div')
                                            .removeClass()
                                            .addClass(getWidgetSize(response.Size));
                        }
                    });

                });
                function getWidgetSize(widgetSize) {
                    switch (widgetSize)
                    {
                        case 0:
                            return "widget-small";

                        case 1:
                            return "widget-medium";

                        case 2:
                            return "widget-big";

                        default:
                            return "";
                    }
                }
            });
        </script>
}